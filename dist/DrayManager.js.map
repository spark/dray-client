{"version":3,"sources":["../src/DrayManager.js"],"names":[],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;AACA;;;;;;;;IAEa,W,WAAA,W;AACZ,sBAAY,OAAZ,EAAqB,QAArB,EAA+B;AAAA;;AAC9B,OAAK,QAAL,GAAgB,OAAhB;AACA,OAAK,SAAL,GAAiB,QAAjB;AACA,OAAK,MAAL,GAAc,uDAA8B,OAA9B,CAAd;AACA;;;;4BAES,U,EAAY;AACrB,OAAI,MAAM,qBAAY,IAAZ,CAAV;AACA,OAAI,aAAJ,CAAkB,UAAlB;AACA,UAAO,GAAP;AACA;;;4BAES,G,EAAK;AACd,UAAO,KAAK,QAAL,CAAc,MAAd,EAAsB,MAAtB,EAA8B,IAAI,MAAJ,EAA9B,EAA4C,IAA5C,CAAiD,UAAC,KAAD,EAAW;AAClE,WAAO,MAAP,CAAc,GAAd,EAAmB,MAAM,GAAN,CAAU,IAA7B;AACA,WAAO,GAAP;AACA,IAHM,CAAP;AAIA;;;4BAES,G,EAAK;AACd,UAAO,KAAK,QAAL,WAAsB,IAAI,EAA1B,EAAgC,KAAhC,EAAuC,IAAvC,CAA4C,UAAC,KAAD,EAAW;AAC7D,WAAO,MAAM,GAAN,CAAU,IAAjB;AACA,IAFM,CAAP;AAGA;;;6BAEU,G,EAAK;AACf,UAAO,KAAK,QAAL,WAAsB,IAAI,EAA1B,WAAoC,IAApC,CAAyC,UAAC,KAAD,EAAW;AAC1D,WAAO,MAAM,GAAN,CAAU,IAAV,CAAe,KAAtB;AACA,IAFM,CAAP;AAGA;;;;;;;;;;6BAOU;AAAA;;AACV,UAAO,KAAK,QAAL,CAAc,MAAd,EAAsB,IAAtB,CAA2B,UAAC,KAAD,EAAW;AAC5C,WAAO,MAAM,GAAN,CAAU,IAAV,CAAe,GAAf,CAAmB,UAAC,IAAD,EAAU;AACnC,SAAI,MAAM,4BAAkB,IAAlB,CAAV;AACA,YAAO,GAAP;AACA,KAHM,CAAP;AAIA,IALM,CAAP;AAMA;;;2BAEQ,G,EAAmC;AAAA,OAA9B,MAA8B,yDAAvB,KAAuB;AAAA,OAAhB,IAAgB,yDAAX,SAAW;;AAC3C,UAAO,KAAK,MAAL,CAAY,MAAZ,EAAuB,KAAK,QAA5B,SAAwC,GAAxC,EAA+C,IAA/C,EAAqD,GAArD,EAAP;AACA","file":"DrayManager.js","sourcesContent":["import 'babel-polyfill';\nimport { DrayJob } from './DrayJob';\nimport superagent from 'superagent';\nimport superagentPromise from 'superagent-promise';\n\nexport class DrayManager {\n\tconstructor(drayUrl, redisUrl) {\n\t\tthis._drayUrl = drayUrl;\n\t\tthis._redisUrl = redisUrl;\n\t\tthis._agent = superagentPromise(superagent, Promise);\n\t}\n\n\tcreateJob(parameters) {\n\t\tlet job = new DrayJob(this);\n\t\tjob.setParameters(parameters);\n\t\treturn job;\n\t}\n\n\tsubmitJob(job) {\n\t\treturn this._request('jobs', 'post', job.toJSON()).then((value) => {\n\t\t\tObject.assign(job, value.res.body);\n\t\t\treturn job;\n\t\t});\n\t}\n\n\tdeleteJob(job) {\n\t\treturn this._request(`jobs/${job.id}`, 'del').then((value) => {\n\t\t\treturn value.res.body;\n\t\t});\n\t}\n\n\tgetJobLogs(job) {\n\t\treturn this._request(`jobs/${job.id}/log`).then((value) => {\n\t\t\treturn value.res.body.lines;\n\t\t});\n\t}\n\n\t/**\n\t * List submitted Dray jobs\n\t *\n\t * @returns {Promise} Resolves into {Array} of jobs\n\t */\n\tlistJobs() {\n\t\treturn this._request('jobs').then((value) => {\n\t\t\treturn value.res.body.map((item) => {\n\t\t\t\tlet job = new DrayJob(this, item);\n\t\t\t\treturn job;\n\t\t\t});\n\t\t});\n\t}\n\n\t_request(url, method='get', data=undefined) {\n\t\treturn this._agent[method](`${this._drayUrl}/${url}`, data).end();\n\t}\n}\n"]}